"""Initial migration.

Revision ID: 064054375ecb
Revises: 
Create Date: 2023-03-28 11:29:53.130758

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '064054375ecb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE SCHEMA IF NOT EXISTS web;')
    op.execute('CREATE SCHEMA IF NOT EXISTS datalake;')
    op.create_table('events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.String(length=55), nullable=True),
                    sa.Column('lat', sa.String(length=55), nullable=True),
                    sa.Column('lng', sa.String(length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='datalake'
                    )
    op.create_table('Dashboard',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=55), nullable=True),
                    sa.Column('dt_created', sa.DATE(), nullable=True),
                    sa.Column('origin', sa.String(length=55), nullable=True),
                    sa.Column('layout_grid', sa.JSON(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Scope',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('description', sa.String(
                        length=500), nullable=True),
                    sa.Column('key', sa.String(length=500), nullable=True),
                    sa.Column('name', sa.String(length=500), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Tenant',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('city', sa.String(length=255), nullable=True),
                    sa.Column('city_code', sa.String(
                        length=255), nullable=True),
                    sa.Column('country', sa.String(length=255), nullable=True),
                    sa.Column('status', sa.SMALLINT(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('User',
                    sa.Column('id', sa.Integer(),
                              autoincrement=False, nullable=False),
                    sa.Column('uid', sa.String(length=200), nullable=True),
                    sa.Column('name', sa.String(length=500), nullable=True),
                    sa.Column('email', sa.String(length=200), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    schema='web'
                    )
    op.create_table('field',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(length=55), nullable=True),
                    sa.Column('value', sa.String(length=55), nullable=True),
                    sa.Column('type', sa.String(length=55), nullable=True),
                    sa.Column('origin', sa.String(length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('filter',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('id_layer', sa.Integer(), nullable=False),
                    sa.Column('id_group', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('generic_queries',
                    sa.Column('query_key', sa.TEXT(), nullable=False),
                    sa.Column('tenant', sa.TEXT(), nullable=False),
                    sa.Column('type', sa.TEXT(), nullable=True),
                    sa.Column('query_sql', sa.TEXT(), nullable=True),
                    sa.Column('filters', postgresql.JSONB(
                        astext_type=sa.Text()), nullable=True),
                    sa.Column('layers', postgresql.JSONB(
                        astext_type=sa.Text()), nullable=True),
                    sa.PrimaryKeyConstraint('query_key', 'tenant'),
                    schema='web'
                    )
    op.create_table('group',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(length=55), nullable=False),
                    sa.Column('origin', sa.String(length=3), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('issue',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=False),
                    sa.Column('user', sa.String(length=100), nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('version', sa.String(
                        length=100), nullable=False),
                    sa.Column('image', sa.Text(), nullable=True),
                    sa.Column('origin', sa.String(length=3), nullable=True),
                    sa.Column('status', sa.String(length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('prediction_precision',
                    sa.Column('n_sectors', sa.String(
                        length=55), nullable=True),
                    sa.Column('algorithm', sa.String(
                        length=55), nullable=True),
                    sa.Column('model_date', sa.String(
                        length=55), nullable=True),
                    sa.Column('run_time', sa.String(length=55), nullable=True),
                    sa.Column('f1', sa.String(length=55), nullable=True),
                    sa.Column('f1_threshold', sa.String(
                        length=55), nullable=True),
                    sa.Column('f2', sa.String(length=55), nullable=True),
                    sa.Column('f2_threshold', sa.String(
                        length=55), nullable=True),
                    sa.Column('training_start', sa.String(
                        length=55), nullable=True),
                    sa.Column('training_end', sa.String(
                        length=55), nullable=True),
                    sa.Column('prediction_for', sa.String(
                        length=55), nullable=True),
                    sa.Column('model_path', sa.String(
                        length=55), nullable=True),
                    sa.Column('observation', sa.String(
                        length=55), nullable=True),
                    sa.Column('layer', sa.String(length=55), nullable=False),
                    sa.Column('prediction_date', sa.String(
                        length=55), nullable=False),
                    sa.PrimaryKeyConstraint('layer', 'prediction_date'),
                    schema='web'
                    )
    op.create_table('profile',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('uid', sa.String(length=55), nullable=False),
                    sa.Column('name', sa.String(length=55), nullable=True),
                    sa.Column('email', sa.String(length=55), nullable=False),
                    sa.Column('role', sa.String(length=55), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=False),
                    sa.Column('origin', sa.String(length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id', 'uid'),
                    schema='web'
                    )
    op.create_table('section',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=55), nullable=True),
                    sa.Column('icon', sa.String(length=55), nullable=True),
                    sa.Column('position', sa.Integer(), nullable=True),
                    sa.Column('origin', sa.String(length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('section_layer',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('id_section', sa.Integer(), nullable=True),
                    sa.Column('id_layer', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('unavailable_dates',
                    sa.Column('origin', sa.String(length=55), nullable=True),
                    sa.Column('id_layer', sa.BIGINT(), nullable=False),
                    sa.Column('dt_filter', sa.String(
                        length=55), nullable=True),
                    sa.PrimaryKeyConstraint('id_layer'),
                    schema='web'
                    )
    op.create_table('AuditLog',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('user_name', sa.String(
                        length=100), nullable=True),
                    sa.Column('action', sa.String(length=255), nullable=True),
                    sa.Column('url', sa.String(length=255), nullable=True),
                    sa.Column('ip', sa.String(length=55), nullable=True),
                    sa.Column('browser', sa.String(length=255), nullable=True),
                    sa.Column('object_type', sa.String(
                        length=255), nullable=True),
                    sa.Column('object_name', sa.String(
                        length=255), nullable=True),
                    sa.Column('object_id', sa.Integer(), nullable=True),
                    sa.Column('data', sa.JSON(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('tenant', sa.String(length=55), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['web.User.id'], ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('ChartType',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('extra_props', sa.TEXT(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('DashboardItem',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('id_dashboard', sa.Integer(), nullable=True),
                    sa.Column('tipo', sa.String(length=55), nullable=True),
                    sa.Column('titulo', sa.String(length=55), nullable=True),
                    sa.Column('sql', sa.String(length=255), nullable=True),
                    sa.Column('filters', sa.JSON(), nullable=True),
                    sa.Column('grid_line', sa.String(
                        length=255), nullable=True),
                    sa.Column('grid_col', sa.String(
                        length=255), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['id_dashboard'], ['web.Dashboard.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('FeatureCollection',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('bbox', sa.String(length=255), nullable=True),
                    sa.Column('bucket_url', sa.String(
                        length=255), nullable=True),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('view', sa.String(length=255), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('FieldConfig',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=True),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.Column('visible', sa.Boolean(), nullable=True),
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('type', sa.String(length=255), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Role',
                    sa.Column('id', sa.Integer(),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('default', sa.Boolean(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Section',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('icon', sa.String(length=255), nullable=True),
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['tenant'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Tab',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.Column('priority', sa.Integer(), nullable=True),
                    sa.Column('visible', sa.Boolean(), nullable=True),
                    sa.Column('selected', sa.Boolean(), nullable=True),
                    sa.Column('style', sa.TEXT(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Chart',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('charttype_id', sa.Integer(), nullable=False),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('query_sql', sa.TEXT(), nullable=True),
                    sa.Column('visible', sa.Boolean(), nullable=True),
                    sa.Column('style', sa.TEXT(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['charttype_id'], ['web.ChartType.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('FieldConfigOptions',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('field_config_id', sa.Integer(), nullable=True),
                    sa.Column('tenant_id', sa.Integer(), nullable=True),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.ForeignKeyConstraint(['field_config_id'], [
                                            'web.FieldConfig.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Layer',
                    sa.Column('id', sa.Integer(),
                              autoincrement=False, nullable=False),
                    sa.Column('tenant', sa.Integer(), nullable=False),
                    sa.Column('id_section', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('selected', sa.Boolean(), nullable=True),
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('style', sa.JSON(), nullable=True),
                    sa.Column('editable', sa.Boolean(), nullable=True),
                    sa.Column('label', sa.JSON(), nullable=True),
                    sa.Column('configurable', sa.Boolean(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['id_section'], ['web.Section.id'], ),
                    sa.ForeignKeyConstraint(['tenant'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('RoleScope',
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('scope_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['role_id'], ['web.Role.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['scope_id'], ['web.Scope.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('role_id', 'scope_id'),
                    schema='web'
                    )
    op.create_table('UserRoleTenant',
                    sa.Column('UserID', sa.Integer(), nullable=False),
                    sa.Column('RoleID', sa.Integer(), nullable=False),
                    sa.Column('TenantID', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['RoleID'], ['web.Role.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['TenantID'], ['web.Tenant.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['UserID'], ['web.User.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('UserID', 'RoleID', 'TenantID'),
                    schema='web'
                    )
    op.create_table('ChartTypeTabLayer',
                    sa.Column('charttype_id', sa.Integer(), nullable=False),
                    sa.Column('tab_id', sa.Integer(), nullable=False),
                    sa.Column('layer_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['charttype_id'], ['web.ChartType.id'], ),
                    sa.ForeignKeyConstraint(['layer_id'], ['web.Layer.id'], ),
                    sa.ForeignKeyConstraint(['tab_id'], ['web.Tab.id'], ),
                    sa.PrimaryKeyConstraint(
                        'charttype_id', 'tab_id', 'layer_id'),
                    schema='web'
                    )
    op.create_table('Feature',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('code', sa.String(length=255), nullable=True),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('layer_id', sa.Integer(), nullable=False),
                    sa.Column('feature_collection_id',
                              sa.Integer(), nullable=False),
                    sa.Column('geometry', sa.String(
                        length=1000), nullable=False),
                    sa.Column('type', sa.String(length=255), nullable=True),
                    sa.Column('view', sa.String(length=255), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['feature_collection_id'], [
                        'web.FeatureCollection.id'], ),
                    sa.ForeignKeyConstraint(['layer_id'], ['web.Layer.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_index(op.f('ix_web_Feature_layer_id'), 'Feature',
                    ['layer_id'], unique=False, schema='web')
    op.create_table('FieldConfigLayer',
                    sa.Column('layer_id', sa.Integer(), nullable=False),
                    sa.Column('fieldconfig_id', sa.Integer(), nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['fieldconfig_id'], [
                                            'web.FieldConfig.id'], ),
                    sa.ForeignKeyConstraint(['layer_id'], ['web.Layer.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint(
                        'layer_id', 'fieldconfig_id', 'tenant_id'),
                    schema='web'
                    )
    op.create_table('Calendar',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('layer_id', sa.Integer(), nullable=False),
                    sa.Column('feature_id', sa.Integer(), nullable=False),
                    sa.Column('available_date', sa.Date(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['feature_id'], ['web.Feature.id'], ),
                    sa.ForeignKeyConstraint(['layer_id'], ['web.Layer.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_table('Field',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('field_config_id', sa.Integer(), nullable=True),
                    sa.Column('feature_id', sa.Integer(), nullable=True),
                    sa.Column('date', sa.Date(), nullable=True),
                    sa.Column('tenant_id', sa.Integer(), nullable=True),
                    sa.Column('key', sa.String(length=255), nullable=True),
                    sa.Column('value', sa.String(length=255), nullable=True),
                    sa.Column('extra_props', sa.JSON(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['feature_id'], ['web.Feature.id'], ),
                    sa.ForeignKeyConstraint(['field_config_id'], [
                                            'web.FieldConfig.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_index(op.f('ix_web_Field_date'), 'Field', [
                    'date'], unique=False, schema='web')
    op.create_index(op.f('ix_web_Field_feature_id'), 'Field', [
                    'feature_id'], unique=False, schema='web')
    op.create_index(op.f('ix_web_Field_field_config_id'), 'Field', [
                    'field_config_id'], unique=False, schema='web')
    op.create_index(op.f('ix_web_Field_tenant_id'), 'Field', [
                    'tenant_id'], unique=False, schema='web')
    op.create_table('Properties',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('feature_id', sa.Integer(), nullable=False),
                    sa.Column('tenant_id', sa.Integer(), nullable=False),
                    sa.Column('image', sa.String(length=255), nullable=True),
                    sa.Column('style', sa.String(length=255), nullable=True),
                    sa.Column('display_name', sa.String(
                        length=255), nullable=True),
                    sa.Column('label', sa.String(length=255), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('last_update', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['feature_id'], ['web.Feature.id'], ),
                    sa.ForeignKeyConstraint(
                        ['tenant_id'], ['web.Tenant.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='web'
                    )
    op.create_index(op.f('ix_web_Properties_feature_id'), 'Properties', [
                    'feature_id'], unique=False, schema='web')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_web_Properties_feature_id'),
                  table_name='Properties', schema='web')
    op.drop_table('Properties', schema='web')
    op.drop_index(op.f('ix_web_Field_tenant_id'),
                  table_name='Field', schema='web')
    op.drop_index(op.f('ix_web_Field_field_config_id'),
                  table_name='Field', schema='web')
    op.drop_index(op.f('ix_web_Field_feature_id'),
                  table_name='Field', schema='web')
    op.drop_index(op.f('ix_web_Field_date'), table_name='Field', schema='web')
    op.drop_table('Field', schema='web')
    op.drop_table('Calendar', schema='web')
    op.drop_table('FieldConfigLayer', schema='web')
    op.drop_index(op.f('ix_web_Feature_layer_id'),
                  table_name='Feature', schema='web')
    op.drop_table('Feature', schema='web')
    op.drop_table('ChartTypeTabLayer', schema='web')
    op.drop_table('UserRoleTenant', schema='web')
    op.drop_table('RoleScope', schema='web')
    op.drop_table('Layer', schema='web')
    op.drop_table('FieldConfigOptions', schema='web')
    op.drop_table('Chart', schema='web')
    op.drop_table('Tab', schema='web')
    op.drop_table('Section', schema='web')
    op.drop_table('Role', schema='web')
    op.drop_table('FieldConfig', schema='web')
    op.drop_table('FeatureCollection', schema='web')
    op.drop_table('DashboardItem', schema='web')
    op.drop_table('ChartType', schema='web')
    op.drop_table('AuditLog', schema='web')
    op.drop_table('unavailable_dates', schema='web')
    op.drop_table('section_layer', schema='web')
    op.drop_table('section', schema='web')
    op.drop_table('profile', schema='web')
    op.drop_table('prediction_precision', schema='web')
    op.drop_table('issue', schema='web')
    op.drop_table('group', schema='web')
    op.drop_table('generic_queries', schema='web')
    op.drop_table('filter', schema='web')
    op.drop_table('field', schema='web')
    op.drop_table('User', schema='web')
    op.drop_table('Tenant', schema='web')
    op.drop_table('Scope', schema='web')
    op.drop_table('Dashboard', schema='web')
    # ### end Alembic commands ###
